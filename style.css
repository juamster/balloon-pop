/* this is how we make variables in css */
:root{
  --primary: #f393fd;
  --primary-darken: #920ca0;
  --bg: rgb(242, 213, 213);
  --shadow: 2px 0 8px rgba(0,0,0,.3);
  --corners: 6px;
  --text-color:  rgb(20, 20, 20);
  --dark:  rgb(20, 20, 20);
  --dark-lighten:  rgb(108, 75, 75);
  --light: rgb(252, 252, 252);
}

body {
  background-color: var(--bg);
  font-family: 'Permanent Marker', cursive;
  font-size: 16pt;
  color: var(--text-color);

}

header {
  margin: 3em 0;
}

img {
  max-width: 100%;
}

button {
  background-color: var(--primary);
  color: var(--light);
  border: 1px solid var(--primary-darken);
  border-radius: var(--corners);
  box-shadow: var(--shadow);
  text-transform: uppercase;
  transition: all .2s ease;
  cursor: pointer;
  padding: 1em;
}

button:hover {
  background-color: var(--primary-darken);
  border: none;
}

form {
  margin:0;
}

input {
  background-color: transparent;
  border:none;
  border-bottom: 1px solid var(--text-color);
  outline:none;
  font-size: 14pt;
  
}
/*  pump is the container for the handle and pump box */
.pump{
  margin-top: 80px;
  height: 130px;
  width: 180px;
  position: relative;
  align-self: flex-end;
}

.handle{
  height: 10px;
  width: 80px;
  background-color: var(--dark-lighten);
  position: absolute;
  top: -80px;
  left: 50;
  display:flex;
  justify-content: center;
  transition: all .05s linear;
  z-index: 1;
}


/* psudeo class element */
.handle::before{
  content: " ";
  background-color: var(--dark-lighten);
  height: 80px;
  width: 10px;
  display: block;
}

.game-container {
  height: 300px
}

/* when the pump is active, target the handle */
.pump:active .handle{
  top: -20px;
}

/* zindex lets you put things before/after */
.pump-box{
  background-color: var(--primary);
  height: 130px;
  width: 180px;
  border-top-right-radius: 20px;
  border-top-left-radius: 20px;
  z-index: 2;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none; /* user can't select text */
}

.pump-box span{
  background-color: antiquewhite;
  padding : .5em;
}
.balloon {
  height: 140px;
  width: 100px;
  background-color: blue;
  border-radius: 50%;
  transition: all .2s ease;
  animation: balloon-float 5s ease-in-out infinite;
  align-self: flex-end;
  margin: 0 auto;
  box-shadow: inset -10px -10px 12px rgba(0,0,0,.3);
  
  background: linear-gradient(309deg, rgba(2,0,36,1) 0%, rgba(53,40,185,1) 56%, rgba(0,212,255,1) 100%);
}

.balloon.green {
  filter: hue-rotate(130deg);
}

.balloon.red {
  filter: hue-rotate(25deg);
}
.balloon.purple {
  filter: hue-rotate(275deg);
}

.balloon.pink {
  filter: hue-rotate(300deg);
}

/* animation */
@keyframes balloon-float {
  0%, 100% {
    transform: translateY(-25px) rotate(5deg);
  }
  50% {
    transform: translateY(0px)  rotate(-5deg);
  }
}
.container {
  width: 50%;
  margin: auto;
}
@media screen and (max-width: 700px) {
  .container {
    width: 90%;
  }
}
.card {
  background-color: var(--light);
  padding: 1em; 
  box-shadow:  var(--shadow);
  border-radius: var(--corners);
}

.text-center {
  text-align: center;
}
.shadow {
  filter : drop-shadow(var(--shadow));
}
.bg-dark {
  background-color: var(--dark);
}

.bg-dark-lighten {
  background-color: var(--dark-lighten);
}

.text-light {
  color: var(--light);
}

.btn-dark {
  background-color: var(--dark-lighten);
  border-color: var(--dark)
}

.btn-dark:hover {
  background-color: var(--dark);
  border-color: var(--dark-lighten)
}

.d-flex{
  display: flex;
  align-items: center;
}
/* shows that space-between must have d-flex too */
.d-flex.space-between{
  justify-content: space-between;
}

.d-flex.space-evenly{
  justify-content: space-around;
}

.mt-1 {
  margin-top: .5em;
}
.mt-2 {
  margin-top: 1em;
}
.mt-3 {
  margin-top: 1.5em;
}

.mb-1 {
  margin-bottom: .5em;
}
.mb-2 {
  margin-bottom: 1em;
}
.mb-3 {
  margin-bottom: 1.5em;
}


.hidden {
  display : none !important;
}